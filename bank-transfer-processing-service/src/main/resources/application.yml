server:
  port: 8092

spring:
  application:
    name: bank-transfer-processing-service

  cache:
    type: redis
    redis:
      cache-null-values: false
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: ${DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}
  #TODO adjust it for production
  jpa:
    hibernate:
      ddl-auto: create-drop  # For dev/testing only; use 'update' or 'validate' in production
    show-sql: false

redisson:
  config: |
    singleServerConfig:
      address: "redis://${REDIS_HOST}:${REDIS_PORT}"
      timeout: 10000
      connectionPoolSize: 10
      connectionMinimumIdleSize: 1

cloud:
  aws:
    region:
      static: us-east-1
    sqs:
      endpoint: http://localhost:4568
      queues:
        request-internal-transfers:
          queue-name: 'bank-transfer-internal-requested.fifo'

client:
  api:
    bank-accounts:
      base-url: 'http://localhost:8090'

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, metrics
  metrics:
    distribution:
      percentiles-histogram:
        request.internal.transfer.time: true